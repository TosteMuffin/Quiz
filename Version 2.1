/*
Date: 2/1/2024
Author: TosteMuffin
Desc: A quiz that adapts to the user by getting more difficult, or less difficult
      based on the amount of correct answers.*/

#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>

void easygen(int& num1, int& num2);
void normalgen(int& num1, int& num2);
void hardgen(int& num1, int& num2);
void difficulty(int userAnswer, int& correctAnswer, int& correctCount, int& difficultyCount);
void difficultyScale(int difficultyCount, int& num1, int& num2);


int main()
{
    std::srand(static_cast<unsigned int>(std::time(nullptr))); // Seed for randomization

    int correctCount = 0;
    int wrongCount = 0;
    int num1, num2;
    int difficultyCount = 1;

    while (true) 
    {
        // Generate random numbers for the quiz
        difficultyScale(difficultyCount, num1, num2);
        

        // Ask the user the question
        std::cout << "What is " << num1 << " + " << num2 << "? ";
        int userAnswer;
        std::cin >> userAnswer;

        // Check the answer
        int correctAnswer = num1 + num2;
        difficulty(userAnswer, correctAnswer, correctCount, difficultyCount);
        if (userAnswer != correctAnswer)
        {
            std::cout << "Incorrect!\n";
            wrongCount++;
            if (wrongCount == 5) {
                std::cout << "You got 5 questions wrong. Game over!\n";
                break; // Exit the loop
            }
        }
    }
}


void easygen(int &num1, int &num2)
{
    num1 = std::rand() % 10;
    num2 = std::rand() % 10;
}

void normalgen(int &num1, int &num2)
{
    num1 = std::rand() % 50;
    num2 = std::rand() % 50;
}

void hardgen(int &num1, int &num2)
{
    num1 = std::rand() % 100;
    num2 = std::rand() % 100;
}


void difficulty(int userAnswer, int &correctAnswer, int &correctCount, int &difficultyCount)
{
    if (userAnswer == correctAnswer) {
        std::cout << "Correct!\n";
        correctCount++;
        // Increase difficulty based on correct answers
        if (correctCount % 5 == 0) {
            difficultyCount++;
            std::cout << "Difficulty Level increased to " << difficultyCount << "! \n";
        }
    }
}


void difficultyScale(int difficultyCount, int &num1, int &num2)
{
    if (difficultyCount == 1)
    {
        easygen(num1, num2);
    }
    else if (difficultyCount == 2)
    {
        normalgen(num1, num2);
    }
    else if (difficultyCount == 3)
    {
        hardgen(num1, num2);
    }
}
